#+TITLE: Deriving temperatures from line widths using MUSE spectra
#+AUTHOR: William Henney
#+EMAIL: will@henney.org


* Plan
It looks like the sigmas that I measured from MUSE are good enough to find kinematic temperatures.  I want to break this out from the main MUSE project, so that it doesn't get dragged down by the general inertia


* Marshalling the image files
+ We need the mean, sigma, and linesum for all the lines of interest
+ Note that the whole =data/= folder is omitted from the git repo, because it is too large (0.5 GB at the start)
#+name: line-ids
| He_I-5876  |
| He_I-6678  |
| H_I-4861   |
| H_I-6563   |
| H_I-9015   |
| H_I-9229   |
| O_III-4959 |
| O_III-5007 |
| S_III-9069 |
| N_II-6548  |
| N_II-6583  |

#+header: 
#+BEGIN_SRC shell :results drawer :var LINES=line-ids
  SRCDIR=~/Dropbox/OrionMuse/LineMaps
  for line in ${LINES[*]}; do
      echo $line
      cp -va $SRCDIR/{mean,linesum}-$line.fits data
  done
#+END_SRC

#+RESULTS:
:RESULTS:
He_I-5876
/Users/will/Dropbox/OrionMuse/LineMaps/mean-He_I-5876.fits -> data/mean-He_I-5876.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-He_I-5876.fits -> data/linesum-He_I-5876.fits
He_I-6678
/Users/will/Dropbox/OrionMuse/LineMaps/mean-He_I-6678.fits -> data/mean-He_I-6678.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-He_I-6678.fits -> data/linesum-He_I-6678.fits
H_I-4861
/Users/will/Dropbox/OrionMuse/LineMaps/mean-H_I-4861.fits -> data/mean-H_I-4861.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-H_I-4861.fits -> data/linesum-H_I-4861.fits
H_I-6563
/Users/will/Dropbox/OrionMuse/LineMaps/mean-H_I-6563.fits -> data/mean-H_I-6563.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-H_I-6563.fits -> data/linesum-H_I-6563.fits
H_I-9015
/Users/will/Dropbox/OrionMuse/LineMaps/mean-H_I-9015.fits -> data/mean-H_I-9015.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-H_I-9015.fits -> data/linesum-H_I-9015.fits
H_I-9229
/Users/will/Dropbox/OrionMuse/LineMaps/mean-H_I-9229.fits -> data/mean-H_I-9229.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-H_I-9229.fits -> data/linesum-H_I-9229.fits
O_III-4959
/Users/will/Dropbox/OrionMuse/LineMaps/mean-O_III-4959.fits -> data/mean-O_III-4959.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-O_III-4959.fits -> data/linesum-O_III-4959.fits
O_III-5007
/Users/will/Dropbox/OrionMuse/LineMaps/mean-O_III-5007.fits -> data/mean-O_III-5007.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-O_III-5007.fits -> data/linesum-O_III-5007.fits
S_III-9069
/Users/will/Dropbox/OrionMuse/LineMaps/mean-S_III-9069.fits -> data/mean-S_III-9069.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-S_III-9069.fits -> data/linesum-S_III-9069.fits
N_II-6548
/Users/will/Dropbox/OrionMuse/LineMaps/mean-N_II-6548.fits -> data/mean-N_II-6548.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-N_II-6548.fits -> data/linesum-N_II-6548.fits
N_II-6583
/Users/will/Dropbox/OrionMuse/LineMaps/mean-N_II-6583.fits -> data/mean-N_II-6583.fits
/Users/will/Dropbox/OrionMuse/LineMaps/linesum-N_II-6583.fits -> data/linesum-N_II-6583.fits
:END:


* Making correlations

** Mean vs mean
#+name: mean-mean-plot
#+header: :var XLINE="He_I-6678" YLINE="H_I-6563"
#+header: :var VMIN=20 VMAX=40 GAMMA=0.5 NBIN=50 BMIN=2.0
#+BEGIN_SRC python :results file :return plotfile
  import numpy as np
  from astropy.io import fits
  from matplotlib import pyplot as plt
  from matplotlib.ticker import (MultipleLocator, LogLocator, 
				 MaxNLocator, FormatStrFormatter)
  import seaborn as sns

  plotfile = 'hist-mean-{}-mean-{}.pdf'.format(XLINE, YLINE)

  xv = fits.open('data/mean-{}.fits'.format(XLINE))[0].data
  yv = fits.open('data/mean-{}.fits'.format(YLINE))[0].data

  xb = fits.open('data/linesum-{}.fits'.format(XLINE))[0].data
  yb = fits.open('data/linesum-{}.fits'.format(YLINE))[0].data

  w = xb + yb
  m = (np.isfinite(xv + yv + w) &
       (xb > BMIN*np.nanmedian(xb)) &
       (yb > BMIN*np.nanmedian(yb)))

  msg = '{} valid pixels'.format(m.sum())
  xmin, xmax = ymin, ymax = VMIN, VMAX

  H, xedges, yedges = np.histogram2d(xv[m], yv[m], 
                                     bins=[NBIN, NBIN],
                                     range=[[xmin, xmax], [ymin, ymax]],
                                     weights=w[m]
                                    )


  sns.set(style='white', font_scale=1.5, color_codes=True)
  fig, ax = plt.subplots(figsize=(5, 5))
  # sns.distplot(xsig[m]**2, kde=False, hist_kws={'range': [0, 1.5*SIGMAX**2]})
  ax.imshow((H.T)**(1.0/GAMMA), 
            extent=[xmin, xmax, ymin, ymax], 
            interpolation='none', aspect='auto', 
            origin='lower', cmap=plt.cm.gray_r)
  ax.plot([xmin, xmax], [ymin, ymax], 'r', alpha=0.3, lw=2)
  ax.text(0.5, 0.98, msg, ha='center', va='top',
          fontsize='x-small',
          transform=ax.transAxes)
  ax.xaxis.set_major_formatter(FormatStrFormatter('%d'))
  ax.xaxis.set_major_locator(MaxNLocator(4, integer=True, prune='both'))
  ax.yaxis.set_major_formatter(FormatStrFormatter('%d'))
  ax.yaxis.set_major_locator(MaxNLocator(4, integer=True, prune='both'))
  ax.set(
      xlabel='Mean velocity ' + XLINE,
      ylabel='Mean velocity ' + YLINE,
      xlim=[xmin, xmax],
      ylim=[ymin, ymax],
  )
  fig.tight_layout()
  fig.savefig(plotfile)
#+END_SRC

#+RESULTS: mean-mean-plot
[[file:hist-mean-He_I-6678-mean-H_I-6563.pdf]]

#+call: mean-mean-plot(XLINE="He_I-5876", YLINE="H_I-4861")

#+RESULTS:
[[file:hist-mean-He_I-5876-mean-H_I-4861.pdf]]

This must be affected by the fine structure, which perhaps is not taken into account in the He I 5876 rest wavelength

#+call: mean-mean-plot(XLINE="O_III-5007", YLINE="H_I-4861", VMIN=15, VMAX=35)

#+RESULTS:
[[file:hist-mean-O_III-5007-mean-H_I-4861.pdf]]

I am having to shift 5 km/s to the blue for these lines, which suggests an issue with the wavelength calibration between the blue and the red

#+call: mean-mean-plot(XLINE="O_III-4959", YLINE="H_I-4861", VMIN=15, VMAX=35)

#+RESULTS:
[[file:hist-mean-O_III-4959-mean-H_I-4861.pdf]]

#+call: mean-mean-plot(XLINE="O_III-5007", YLINE="O_III-4959", VMIN=15, VMAX=35)

#+RESULTS:
[[file:hist-mean-O_III-5007-mean-O_III-4959.pdf]]

Strangely, there is a slight difference between these two.  Is it a calibration error, or is one of them blended with something?

#+call: mean-mean-plot(XLINE="N_II-6548", YLINE="H_I-6563", VMIN=20, VMAX=40)

#+RESULTS:
[[file:hist-mean-N_II-6548-mean-H_I-6563.pdf]]

#+call: mean-mean-plot(XLINE="N_II-6583", YLINE="H_I-6563", VMIN=25, VMAX=45)

#+RESULTS:
[[file:hist-mean-N_II-6583-mean-H_I-6563.pdf]]

#+call: mean-mean-plot(XLINE="N_II-6583", YLINE="N_II-6548", VMIN=25, VMAX=45)

#+RESULTS:
[[file:hist-mean-N_II-6583-mean-N_II-6548.pdf]]

This shows a 3 km/s offset between the two [N II] lines, which is unfortunate

#+call: mean-mean-plot(XLINE="H_I-9015", YLINE="H_I-9229", VMIN=20, VMAX=40)

#+RESULTS:
[[file:hist-mean-H_I-9015-mean-H_I-9229.pdf]]

This has about a 1 km/s offset between the two lines

#+call: mean-mean-plot(XLINE="S_III-9069", YLINE="H_I-9229", VMIN=20, VMAX=40)

#+RESULTS:
[[file:hist-mean-S_III-9069-mean-H_I-9229.pdf]]

This shows [S III] as being slightly redder than H I. 

#+call: mean-mean-plot(XLINE="H_I-6563", YLINE="H_I-9229", VMIN=20, VMAX=40)

#+RESULTS:
[[file:hist-mean-H_I-6563-mean-H_I-9229.pdf]]

#+call: mean-mean-plot(XLINE="H_I-6563", YLINE="H_I-4861", VMIN=20, VMAX=40)

#+RESULTS:
[[file:hist-mean-H_I-6563-mean-H_I-4861.pdf]]


** Variance vs variance
#+name: var-var-plot
#+header: :var XLINE="He_I-6678" YLINE="H_I-6563"
#+header: :var SIGMIN=35 SIGMAX=60 GAMMA=0.5 NBIN=50 BMIN=2.0
#+BEGIN_SRC python :results file :return plotfile
  import numpy as np
  from astropy.io import fits
  from matplotlib import pyplot as plt
  from matplotlib.ticker import (MultipleLocator, LogLocator, 
				 MaxNLocator, FormatStrFormatter)
  import seaborn as sns

  plotfile = 'hist-var-{}-var-{}.pdf'.format(XLINE, YLINE)

  xsig = fits.open('data/sigma-{}.fits'.format(XLINE))[0].data
  ysig = fits.open('data/sigma-{}.fits'.format(YLINE))[0].data

  xb = fits.open('data/linesum-{}.fits'.format(XLINE))[0].data
  yb = fits.open('data/linesum-{}.fits'.format(YLINE))[0].data

  w = xb + yb
  m = (np.isfinite(xsig + ysig + w) &
       (xb > BMIN*np.nanmedian(xb)) &
       (yb > BMIN*np.nanmedian(yb)))

  msg = '{} valid pixels'.format(m.sum())
  xmin, xmax = ymin, ymax = SIGMIN**2, SIGMAX**2

  H, xedges, yedges = np.histogram2d(xsig[m]**2, ysig[m]**2, 
                                     bins=[NBIN, NBIN],
                                     range=[[xmin, xmax], [ymin, ymax]],
                                     weights=w[m]
                                    )


  sns.set(style='white', font_scale=1.5, color_codes=True)
  fig, ax = plt.subplots(figsize=(5, 5))
  # sns.distplot(xsig[m]**2, kde=False, hist_kws={'range': [0, 1.5*SIGMAX**2]})
  ax.imshow((H.T)**(1.0/GAMMA), 
            extent=[xmin, xmax, ymin, ymax], 
            interpolation='none', aspect='auto', 
            origin='lower', cmap=plt.cm.gray_r)
  ax.plot([xmin, xmax], [ymin, ymax], 'r', alpha=0.3, lw=2)
  ax.text(0.5, 0.98, msg, ha='center', va='top',
          fontsize='x-small',
          transform=ax.transAxes)
  ax.xaxis.set_major_formatter(FormatStrFormatter('%d'))
  ax.xaxis.set_major_locator(MaxNLocator(4, integer=True, prune='both'))
  ax.yaxis.set_major_formatter(FormatStrFormatter('%d'))
  ax.yaxis.set_major_locator(MaxNLocator(4, integer=True, prune='both'))
  ax.set(
      xlabel='Variance ' + XLINE,
      ylabel='Variance ' + YLINE,
      xlim=[xmin, xmax],
      ylim=[ymin, ymax],
  )
  fig.tight_layout()
  fig.savefig(plotfile)
#+END_SRC

#+RESULTS: var-var-plot
[[file:hist-var-He_I-6678-var-H_I-6563.pdf]]

#+call: var-var-plot(XLINE="He_I-5876", YLINE="H_I-4861", SIGMIN=45, SIGMAX=80)

#+RESULTS:
[[file:hist-var-He_I-5876-var-H_I-4861.pdf]]

#+call: var-var-plot(XLINE="O_III-5007", YLINE="H_I-4861", SIGMIN=55, SIGMAX=85)

#+RESULTS:
[[file:hist-var-O_III-5007-var-H_I-4861.pdf]]

#+call: var-var-plot(XLINE="O_III-4959", YLINE="H_I-4861", SIGMIN=55, SIGMAX=85)

#+RESULTS:
[[file:hist-var-O_III-4959-var-H_I-4861.pdf]]

#+call: var-var-plot(XLINE="O_III-5007", YLINE="O_III-4959", SIGMIN=55, SIGMAX=85)

#+RESULTS:
[[file:hist-var-O_III-5007-var-O_III-4959.pdf]]

This shows a small offset, presumably due to increase in the instrumental width going from 5007 to 4959


#+call: var-var-plot(XLINE="N_II-6583", YLINE="H_I-6563", SIGMIN=40, SIGMAX=55)

#+RESULTS:
[[file:hist-var-N_II-6583-var-H_I-6563.pdf]]

#+call: var-var-plot(XLINE="N_II-6548", YLINE="H_I-6563", SIGMIN=40, SIGMAX=55)

#+RESULTS:
[[file:hist-var-N_II-6548-var-H_I-6563.pdf]]

#+call: var-var-plot(XLINE="N_II-6548", YLINE="N_II-6583", SIGMIN=40, SIGMAX=55)

#+RESULTS:
file:hist-var-N_II-6548-var-N_II-6583.pdf

This is disappointingly circular, implying that the sigma variations for the weaker 6548 line are overwhelmingly due to noise.  *Maybe binning might help*

#+call: var-var-plot(XLINE="H_I-9015", YLINE="H_I-9229", SIGMIN=27, SIGMAX=47)

#+RESULTS:
[[file:hist-var-H_I-9015-var-H_I-9229.pdf]]

#+call: var-var-plot(XLINE="S_III-9069", YLINE="H_I-9229", SIGMIN=27, SIGMAX=47)

#+RESULTS:
[[file:hist-var-S_III-9069-var-H_I-9229.pdf]]

#+call: var-var-plot(XLINE="S_III-9069", YLINE="H_I-9015", SIGMIN=27, SIGMAX=47)

#+RESULTS:
[[file:hist-var-S_III-9069-var-H_I-9015.pdf]]



** Velocity differences
+ Either velocity differences against each other
  + In GDH08 we plotted
    + (H - O) against (N - O)
    + (6563-5007) against (6583-5007)
    + Where the slope gives (1 - f)
  + But better alternative is
    + (N - H) against (H - O)
    + (6583 - 6563) against (4861 - 5007)
  + Alternatively, use (6583-5007) against (6583-6563)
  + Which should give f directly
+ Or against line ratios

#+name: dv-dv-plot
#+header: :var XLINE1="H_I-4861" XLINE2="O_III-5007"
#+header: :var YLINE1="N_II-6583" YLINE2="H_I-6563"
#+header: :var VMIN=-4 VMAX=7 GAMMA=1.0 NBIN=50 BMIN=2.0
#+BEGIN_SRC python :results file :return plotfile
  import numpy as np
  from astropy.io import fits
  from matplotlib import pyplot as plt
  from matplotlib.ticker import (MultipleLocator, LogLocator, 
				 MaxNLocator, FormatStrFormatter)
  import seaborn as sns

  wavs = [s.split('-')[-1] for s in
          [XLINE1, XLINE2, YLINE1, YLINE2]]
  plotfile = 'hist-dv-{}-{}-dv-{}-{}.pdf'.format(*wavs)

  xv1 = fits.open('data/mean-{}.fits'.format(XLINE1))[0].data
  xv2 = fits.open('data/mean-{}.fits'.format(XLINE2))[0].data
  xv = xv1 - xv2

  yv1 = fits.open('data/mean-{}.fits'.format(YLINE1))[0].data
  yv2 = fits.open('data/mean-{}.fits'.format(YLINE2))[0].data
  yv = yv1 - yv2

  xb1 = fits.open('data/linesum-{}.fits'.format(XLINE1))[0].data
  xb2 = fits.open('data/linesum-{}.fits'.format(XLINE2))[0].data
  yb1 = fits.open('data/linesum-{}.fits'.format(YLINE1))[0].data
  yb2 = fits.open('data/linesum-{}.fits'.format(YLINE2))[0].data

  w = xb1 + xb2 + yb1 + yb2 
  m = (np.isfinite(xv1 + xv2 + yv1 + yv2 + w) &
       (xb1 > BMIN*np.nanmedian(xb1)) &
       (xb2 > BMIN*np.nanmedian(xb2)) &
       (yb1 > BMIN*np.nanmedian(yb1)) &
       (yb2 > BMIN*np.nanmedian(yb2)))

  msg = '{} valid pixels'.format(m.sum())
  xmin, xmax = ymin, ymax = VMIN, VMAX

  H, xedges, yedges = np.histogram2d(xv[m], yv[m], 
                                     bins=[NBIN, NBIN],
                                     range=[[xmin, xmax], [ymin, ymax]],
                                     weights=w[m]
                                    )


  sns.set(style='white', font_scale=1.5, color_codes=True)
  fig, ax = plt.subplots(figsize=(5, 5))
  # sns.distplot(xsig[m]**2, kde=False, hist_kws={'range': [0, 1.5*SIGMAX**2]})
  ax.imshow((H.T)**(1.0/GAMMA), 
            extent=[xmin, xmax, ymin, ymax], 
            interpolation='none', aspect='auto', 
            origin='lower', cmap=plt.cm.gray_r)
  ax.plot([xmin, xmax], [ymin, ymax], 'r', alpha=0.3, lw=2)
  ax.text(0.5, 0.98, msg, ha='center', va='top',
          fontsize='x-small',
          transform=ax.transAxes)
  ax.axhline(0.0, ls='--', color='k', lw=0.5)
  ax.axvline(0.0, ls='--', color='k', lw=0.5)
  ax.xaxis.set_major_formatter(FormatStrFormatter('%d'))
  ax.xaxis.set_major_locator(MaxNLocator(4, integer=True, prune='both'))
  ax.yaxis.set_major_formatter(FormatStrFormatter('%d'))
  ax.yaxis.set_major_locator(MaxNLocator(4, integer=True, prune='both'))
  ax.set(
      xlabel='dV : {} − {}'.format(XLINE1, XLINE2),
      ylabel='dV : {} − {}'.format(YLINE1, YLINE2),
      xlim=[xmin, xmax],
      ylim=[ymin, ymax],
  )
  fig.tight_layout()
  fig.savefig(plotfile)
#+END_SRC

#+RESULTS: dv-dv-plot
[[file:hist-dv-4861-5007-dv-6583-6563.pdf]]

* Comments on individual line sets

** H alpha and [N II]
+ We have both the 6583 and 6548 lines
  + 6583 is slightly broader
  + Probably because of C II blend
** H beta and [O III]
+ The instrumental width is a bit larger here
+ But it seems very stable
+ We have the two [O III] lines so we can interpolate to H beta
** H alpha and He I 6678
+ This might be the ideal combination
+ The overlap in the emission zones is much higher than with [N II] or [O III]
  + And the T-dependence of the emissivity is very similar
  + Need to check Ne dependence
  + We could check this by doing correlations in surface brightness and looking at velocity difference
+ It is a singlet, so there is no fine-structure broadening
+ The difference in atomic weights is a little bit less
  + H \to He : 1 - 1/4 = 0.75
  + H \to O : 1 - 1/16 = 0.9375
  + But that is hardly significant
+ Also s/n is a bit lower since it is a weaker line
  + But a little binning would fix that
** H beta and He I 5876
+ This is not so good since He line is triplet
+ But it will be a good independent test

** Redder lines
+ We have H I 9229
  + Intrumental linewidth is a bit better
  + But only strong option for comparison is [S III] 9069
  + Which would need correcting for both [S II] /and/ [S IV]
  + But we could also use H I 9015 to interpolate to 9069 position
+ Then there is the [Ar III] 7137, 7751
  + Which could maybe be compared with H I 8438, etc
  + But it isn't really until we get to H I 8750 that the data quality is any good
  + And that is a a long way from [Ar III]
* Org export options                              :noexport:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:nil
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:nil todo:t |:t
